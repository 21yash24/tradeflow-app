rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users: Can read anyone's profile, but only write to their own.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId);

      // Followers/Following subcollections: A user can read their own followers/following lists.
      // A user can write to their own following list and to another user's followers list (to add themselves).
      match /followers/{followerId} {
        allow read: if isSignedIn();
        allow write: if isOwner(followerId); // Allows a user to remove a follower (future functionality)
      }
      match /following/{followingId} {
        allow read: if isSignedIn();
        allow write: if isOwner(userId); // Allows a user to add/remove someone they follow
      }
    }
    
    // Allow users to add themselves to another user's followers list
    match /users/{targetUserId}/followers/{currentUserId} {
        allow create: if isOwner(currentUserId);
        allow delete: if isOwner(currentUserId);
    }

    // Trades: Users can only create, read, update, and delete their own trades.
    match /trades/{tradeId} {
      allow read, write: if isOwner(request.resource.data.userId) || (isOwner(resource.data.userId) && request.resource.data.userId == resource.data.userId);
    }

    // Accounts: Users can only manage their own accounts.
    match /accounts/{accountId} {
      allow read, write: if isOwner(request.resource.data.userId) || (isOwner(resource.data.userId) && request.resource.data.userId == resource.data.userId);
    }

    // Discipline Logs: Users can only manage their own discipline logs.
    match /discipline/{logId} {
       allow read, write: if isOwner(request.resource.data.userId) || (isOwner(resource.data.userId) && request.resource.data.userId == resource.data.userId);
    }

    // Streaks: Users can manage their own streak.
    match /streaks/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Posts: Logged-in users can read/create posts. Only authors can update/delete.
    match /posts/{postId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.authorId);
      
      // Comments: Any signed-in user can add a comment.
      match /comments/{commentId} {
        allow read, create: if isSignedIn();
        // Future: allow update, delete: if isOwner(resource.data.authorId);
      }
    }
  }
}