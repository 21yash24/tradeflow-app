rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users:
    // - Authenticated users can read any user's profile (for profile pages, search)
    // - A user can only write to their own profile
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    // User Subcollections (following/followers)
    match /users/{userId}/{collection}/{docId} {
        allow read, write: if request.auth != null;
    }

    // Trades:
    // - A user can only create a trade for themselves
    // - A user can only read, update, or delete their own trades
    match /trades/{tradeId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // Accounts:
    // - A user can only create an account for themselves
    // - A user can only read, update, or delete their own accounts
    match /accounts/{accountId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // Alerts:
    // - A user can only create an alert for themselves
    // - A user can only read, update, or delete their own alerts
    match /alerts/{alertId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // Discipline:
    // - A user can only create a discipline log for themselves
    // - A user can only read, update, or delete their own discipline logs
    match /discipline/{disciplineId} {
       allow create: if request.auth.uid == request.resource.data.userId;
       allow read, update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // Streaks:
    // - A user can only read or write to their own streak document
    match /streaks/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Posts:
    // - Any authenticated user can read all posts
    // - A user can only create a post for themselves
    // - A user can only update or delete their own post
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.authorId;
      allow update, delete: if request.auth.uid == resource.data.authorId;
    }
    
    // Comments (subcollection of posts)
    // - Any authenticated user can read comments
    // - Any authenticated user can create a comment
    // - Users cannot edit or delete comments (for simplicity)
    match /posts/{postId}/comments/{commentId} {
        allow read, create: if request.auth != null;
        allow update, delete: if false; 
    }
  }
}
