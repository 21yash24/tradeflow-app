rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user owns the document by checking the userId field
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow get: if isAuthenticated(); // Any logged-in user can view a profile
      allow update: if isOwner(userId); // Only the owner can update their profile

      // Followers and Following subcollections
      match /followers/{followerId} {
        allow read, create, delete: if isAuthenticated();
      }
      match /following/{followingId} {
        allow read, create, delete: if isAuthenticated();
      }
    }
    
    // Trades, Accounts, Discipline, Streaks: User-owned data
    match /trades/{tradeId} {
      allow read, write: if isOwner(resource.data.userId); // Check existing resource on read/update
      allow create: if isOwner(request.resource.data.userId); // Check incoming resource on create
    }
    match /accounts/{accountId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    match /discipline/{disciplineId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    match /streaks/{userId} {
        // The document ID is the user's ID
        allow read, write: if isOwner(userId);
    }

    // Community Posts collection
    match /posts/{postId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(request.resource.data.authorId);
      allow update, delete: if isOwner(resource.data.authorId);

      // Comments subcollection within a post
      match /comments/{commentId} {
        allow read, create: if isAuthenticated();
        allow update, delete: if isOwner(resource.data.authorId);
      }
    }
  }
}